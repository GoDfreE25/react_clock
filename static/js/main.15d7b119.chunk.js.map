{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","App","clockName","isClockVisible","showClock","hideClock","setRandomName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAbP,gCAgBE,SAAmBC,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DP,KAAKQ,MAAMD,SAnBhF,kCAuBE,WACMP,KAAKD,SACPU,cAAcT,KAAKD,WAzBzB,oBA6BE,WACE,OACE,qCACE,+CAEG,IACAC,KAAKQ,MAAMD,QAEd,+CAEG,IACAP,KAAKJ,MAAMC,KAAKQ,+BAxC3B,GAA2BK,IAAMC,WCD3BC,E,4MACJhB,MAAQ,CACNiB,UAAW,EACXC,gBAAgB,G,EAGlBC,UAAY,kBAAM,EAAKb,SAAS,CAAEY,gBAAgB,K,EAElDE,UAAY,kBAAM,EAAKd,SAAS,CAAEY,gBAAgB,K,EAElDG,cAAgB,kBAAM,EAAKf,SAAS,CAAEW,UAAWK,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAEjE,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CAEErB,KAAKJ,MAAMkB,gBACV,cAAC,EAAD,CAAOP,KAAMP,KAAKJ,MAAMiB,YAE3B,wBACES,KAAK,SACLC,QAASvB,KAAKe,UAFhB,wBAOA,wBACEO,KAAK,SACLC,QAASvB,KAAKgB,UAFhB,wBAOA,wBACEM,KAAK,SACLC,QAASvB,KAAKiB,cAFhB,oC,GAlCUP,IAAMC,WA6CTC,ICnDfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.15d7b119.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: number;\n}\n\ninterface State {\n  date: Date;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId?: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h2>\n          Current name:\n          {' '}\n          {this.props.name}\n        </h2>\n        <h2>\n          Current time:\n          {' '}\n          {this.state.date.toLocaleTimeString()}\n        </h2>\n      </>\n\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ninterface State {\n  clockName: number;\n  isClockVisible: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    clockName: 0,\n    isClockVisible: true,\n  };\n\n  showClock = () => this.setState({ isClockVisible: true });\n\n  hideClock = () => this.setState({ isClockVisible: false });\n\n  setRandomName = () => this.setState({ clockName: Math.floor(Math.random() * 100) });\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React Clock</h1>\n\n        { this.state.isClockVisible\n        && <Clock name={this.state.clockName} />}\n\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.setRandomName}\n        >\n          Set Random Name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}